{"version":3,"sources":["services/settings.js","services/getGifs.js","context/GifsContext.js","hooks/useGifs.js","hooks/useNearScreen.js","components/Gif/index.js","components/ListOfGifs/index.js","components/Spinner/index.js","components/Container/index.js","components/Form/index.js","components/Header/index.js","components/TrendingSearches/index.js","pages/Home/index.js","hooks/useGlobalGifs.js","pages/Detail/index.js","pages/SearchResults/index.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","API_URL","getGifs","keyword","mode","page","limit","apiUrl","fetch","then","res","json","response","data","map","gif","title","id","url","images","downsized_medium","Context","React","createContext","GifsContextProvider","children","useState","gifs","setGifs","Provider","value","useGifs","loading","setLoading","loadingNextPage","setLoadingNextPage","setPage","useContext","GifsContext","keywordToUse","localStorage","getItem","modeToUse","useEffect","setItem","nextGifs","prevGifs","concat","useNearScreen","distance","externalRef","once","isNearScreen","setShow","fromRef","useRef","element","current","observer","IntersectionObserver","entries","isIntersecting","disconnect","rootMargin","observe","Gif","to","className","src","alt","ListOfGifs","breakpointCols","default","columnClassName","Spinner","Container","debounceHandleNextPage","useCallback","debounce","prevPage","decodeURI","ref","Form","setKeyword","useLocation","pushLocation","onSubmit","e","preventDefault","length","onChange","target","type","placeholder","Header","TrendingSearches","lazy","LazyTrending","fallback","Home","useGlobalGifs","Detail","params","find","singleGif","SearchResults","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb25f036.chunk.js","sourcesContent":["export const API_KEY = '4j3Gn8Ef6wRe5OnS4RV0RXVMAXdtV8aM';\r\nexport const API_URL = 'https://api.giphy.com/v1'","import { API_KEY, API_URL } from \"./settings\";\r\nconst getGifs = ({ keyword, mode, page = 0, limit=25 } = {}) => {\r\n  \r\n  let apiUrl = null;\r\n\r\n  if (mode === 'trending') {\r\n    apiUrl = `${API_URL}/gifs/${mode}?api_key=${API_KEY}&limit=${limit}&offset=${page*limit}&rating=r&lang=en`;\r\n  } else if (mode === 'search') {\r\n    apiUrl = `${API_URL}/gifs/${mode}?api_key=${API_KEY}&q=${keyword}&limit=${limit}&offset=${page*limit}&rating=r&lang=en`;\r\n  }\r\n  \r\n  return fetch(apiUrl)\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        const { data } = response;\r\n        const gifs = data.map(gif => {\r\n          const { title, id, images } = gif;\r\n          const { url } = images.downsized_medium;\r\n          return { title, id, url };\r\n        })\r\n        return gifs\r\n      })\r\n}\r\n\r\nexport default getGifs\r\n","import React, { useState } from 'react'\r\n\r\nconst Context = React.createContext({});\r\n\r\nexport function GifsContextProvider({children}) {\r\n  const [gifs, setGifs] = useState([]);\r\n\r\n  return(\r\n    <Context.Provider value={{gifs,setGifs}}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Context\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport getGifs from 'services/getGifs';\r\nimport GifsContext from 'context/GifsContext'\r\n\r\nconst INITIAL_PAGE = 0\r\n\r\nconst useGifs = ({keyword} = {keyword: null}, mode) => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingNextPage, setLoadingNextPage] = useState(false);\r\n  const [page, setPage] = useState(INITIAL_PAGE);\r\n  const { gifs, setGifs } = useContext(GifsContext);\r\n\r\n  // recuperamos la keyword del localstorage\r\n  const keywordToUse = keyword || localStorage.getItem('lastKeyword');\r\n  const modeToUse = mode || 'trending';\r\n\r\n  useEffect(function () {\r\n    setLoading(true);\r\n\r\n    getGifs({ keyword: keywordToUse, mode: modeToUse })\r\n      .then((gifs) => {\r\n        setGifs(gifs);\r\n        setLoading(false);\r\n        // guardamos la keyword en el localstorage\r\n        localStorage.setItem('lastKeyword', keyword)\r\n\t\t});\r\n  }, [keyword, keywordToUse,modeToUse, setGifs]);\r\n\r\n  useEffect(function () {\r\n    if (page === INITIAL_PAGE) return\r\n    setLoadingNextPage(true)\r\n\r\n    getGifs({ keyword: keywordToUse, mode: modeToUse, page })\r\n      .then(nextGifs => {\r\n        setGifs(prevGifs => prevGifs.concat(nextGifs))\r\n        setLoadingNextPage(false)\r\n      })\r\n    \r\n  }, [page, keywordToUse, modeToUse, setGifs])\r\n\r\n  return {loading, loadingNextPage, gifs, setPage}\r\n}\r\n\r\nexport default useGifs\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nconst useNearScreen = ({ distance = '100px', externalRef , once = true} = {}) => {\r\n\tconst [isNearScreen, setShow] = useState(false);\r\n\tconst fromRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst element = externalRef ? externalRef.current : fromRef.current;\r\n\r\n\t\tconst onChange = (entries, observer) => {\r\n\t\t\tconst el = entries[0];\r\n\t\t\tif (el.isIntersecting) {\r\n\t\t\t\tsetShow(true);\r\n\t\t\t\tonce && observer.disconnect();\r\n\t\t\t} else {\r\n\t\t\t\t!once && setShow(false)\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst observer = new IntersectionObserver(onChange, {\r\n\t\t\trootMargin: distance,\r\n\t\t});\r\n\t\tif (element) {\r\n\t\t\tobserver.observe(element);\r\n\t\t}\r\n\r\n\t\treturn () => observer.disconnect();\r\n\t}, [fromRef, externalRef, distance, once]);\r\n\r\n\treturn { isNearScreen, fromRef };\r\n};\r\n\r\nexport default useNearScreen;\r\n","import { Link } from 'wouter';\r\nimport './Gif.css'\r\n\r\nconst Gif = ({title, id, url}) => {\r\n\treturn (\r\n\t\t<Link to={`/gif/${id}`} className=\"Gif\">\r\n\t\t\t<figure>\r\n\t\t\t\t<img src={url} alt='giff' />\r\n\t\t\t\t<figcaption>{ title }</figcaption>\r\n\t\t\t</figure>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nexport default Gif;\r\n","import Masonry from 'react-masonry-css';\r\nimport Gif from '../Gif';\r\n\r\nconst ListOfGifs = ({ gifs }) => {\r\n\tconst breakpoints = {\r\n\t\tdefault: 4,\r\n\t\t1500: 3,\r\n\t\t1000: 2,\r\n\t\t700: 1,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Masonry\r\n\t\t\tbreakpointCols={breakpoints}\r\n\t\t\tclassName='my-masonry-grid'\r\n\t\t\tcolumnClassName='my-masonry-grid_column'\r\n\t\t>\r\n\t\t\t{gifs.map(({ id, title, url }) => (\r\n\t\t\t\t<Gif id={id} key={id} title={title} url={url} />\r\n\t\t\t))}\r\n\t\t</Masonry>\r\n\t);\r\n};\r\n\r\nexport default ListOfGifs;\r\n","import './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"spinner\"></div>\r\n}\r\nexport default Spinner\r\n","import { useRef, useEffect, useCallback } from 'react'\r\nimport useGifs from 'hooks/useGifs'\r\nimport useNearScreen from 'hooks/useNearScreen'\r\nimport ListOfGifs from '../ListOfGifs'\r\nimport Spinner from 'components/Spinner'\r\nimport debounce from 'just-debounce-it'\r\n\r\n\r\nconst Container = ({ keyword, mode }) => {\r\n  const { loading, gifs, setPage } = useGifs({ keyword }, mode)\r\n  const externalRef = useRef();\r\n  const { isNearScreen } = useNearScreen({\r\n    externalRef: loading ? null : externalRef,\r\n    once: false\r\n  });\r\n\r\n\r\n  const debounceHandleNextPage = useCallback(debounce(\r\n    () => setPage(prevPage => prevPage + 1), 300\r\n  ), [])\r\n\r\n  useEffect(function () {\r\n    if(isNearScreen) debounceHandleNextPage()\r\n  }, [isNearScreen, debounceHandleNextPage])\r\n  \r\n  return (\r\n    <div className='container'>\r\n       \r\n      {loading\r\n        ? <Spinner />\r\n        : <>\r\n          <h3>{decodeURI(keyword)}</h3>\r\n          <ListOfGifs gifs={gifs} />\r\n          <div id='visor' ref={externalRef}></div>\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container\r\n","import { useState } from 'react';\r\nimport { useLocation } from 'wouter';\r\n\r\nconst Form = () => {\r\n\r\n  const [keyword, setKeyword] = useState('');\r\n  const [path, pushLocation] = useLocation();\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    keyword.length > 0 && pushLocation(`/search/${keyword}`)\r\n  }\r\n  const handleChange = (e) => {\r\n    setKeyword(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n       <form onSubmit={handleSubmit}>\r\n        <input onChange={handleChange} type=\"text\" value={keyword} placeholder=\"Search gifs here...\" />\r\n        <button id='search-button'className='button'>Search</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import { Link } from 'wouter';\r\nimport Form from '../Form';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className='header'>\r\n\t\t\t<header>\r\n\t\t\t  <Link to='/'>\r\n\t\t\t\t\t<h1>GiFox</h1>\r\n\t\t\t\t\t<img className='gifox-logo' src='/gifox-logo.svg' alt='logo' />\r\n\t\t\t  </Link>\r\n\t\t\t</header>\r\n\t\t\t<Form />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, {Suspense} from 'react';\r\nimport useNearScreen from 'hooks/useNearScreen';\r\nimport Spinner from 'components/Spinner';\r\n\r\nconst TrendingSearches = React.lazy(\r\n  () => import('./TrendingSearches')\r\n)\r\n\r\n\r\nconst LazyTrending = () => {\r\n\tconst { isNearScreen, fromRef } = useNearScreen({ distance: '200px' });\r\n\r\n  return <div ref={fromRef}>\r\n    \r\n    {isNearScreen\r\n      ? <Suspense fallback={<Spinner />} >\r\n          <TrendingSearches />\r\n        </Suspense>\r\n      : <Spinner />}\r\n  </div>;\r\n};\r\n\r\nexport default LazyTrending;\r\n","import Container from 'components/Container';\r\nimport Header from 'components/Header';\r\nimport TrendingSearches from 'components/TrendingSearches';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header />\r\n\t\t\t<div className='main'>\r\n\t\t\t\t<Container keyword='trending' mode='trending' />\r\n\t\t\t\t<TrendingSearches />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import {useContext} from 'react'\r\nimport GifsContext from 'context/GifsContext'\r\n\r\n\r\nconst useGlobalGifs = () => {\r\n  const {gifs} = useContext(GifsContext)\r\n  return gifs\r\n}\r\n\r\nexport default useGlobalGifs\r\n","import useGlobalGifs from 'hooks/useGlobalGifs';\r\nimport Gif from 'components/Gif';\r\n\r\nconst Detail = ({ params }) => {\r\n\tconst  gifs  = useGlobalGifs();\r\n\tconst gif = gifs.find((singleGif) => singleGif.id === params.id);\r\n\r\n\treturn (\r\n\t\t<div id='detail'>\r\n\t\t\t<Gif {...gif} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Detail;\r\n","import Header from \"components/Header\";\r\nimport Container from \"components/Container\";\r\n\r\nconst SearchResults = ({ params }) => {\r\n  const { keyword } = params;\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container keyword={keyword} mode='search' />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchResults","import { Route } from 'wouter';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport SearchResults from './pages/SearchResults';\nimport { GifsContextProvider } from './context/GifsContext';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<section className='App-content'>\n\t\t\t\t\t<GifsContextProvider>\n\t\t\t\t\t\t<Route path='/' component={Home} />\n\t\t\t\t\t\t<Route path='/search/:keyword' component={SearchResults} />\n\t\t\t\t\t\t<Route path='/gif/:id' component={Detail} />\n\t\t\t\t\t</GifsContextProvider>\n\t\t\t\t</section>\n\t\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}